                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.4 #11952 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module BankData
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _memcpy
                                     12 	.globl _SetBankedBkgData
                                     13 	.globl _SetBankedSpriteData
                                     14 	.globl _ReadBankedUBYTE
                                     15 	.globl _ReadBankedBankPtr
                                     16 	.globl _MemcpyBanked
                                     17 ;--------------------------------------------------------
                                     18 ; special function registers
                                     19 ;--------------------------------------------------------
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area _DATA
      000000                         24 __save:
      000000                         25 	.ds 1
                                     26 ;--------------------------------------------------------
                                     27 ; absolute external ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area _DABS (ABS)
                                     30 ;--------------------------------------------------------
                                     31 ; global & static initialisations
                                     32 ;--------------------------------------------------------
                                     33 	.area _HOME
                                     34 	.area _GSINIT
                                     35 	.area _GSFINAL
                                     36 	.area _GSINIT
                                     37 ;--------------------------------------------------------
                                     38 ; Home
                                     39 ;--------------------------------------------------------
                                     40 	.area _HOME
                                     41 	.area _HOME
                                     42 ;--------------------------------------------------------
                                     43 ; code
                                     44 ;--------------------------------------------------------
                                     45 	.area _CODE
                                     46 ;/tmp/_gbsbuild/src/core/BankData.c:10: void SetBankedBkgData(UBYTE i, UBYTE l, unsigned char* ptr, UBYTE bank) __naked {
                                     47 ;	---------------------------------
                                     48 ; Function SetBankedBkgData
                                     49 ; ---------------------------------
      000000                         50 _SetBankedBkgData::
                                     51 ;/tmp/_gbsbuild/src/core/BankData.c:30: __endasm;  
      000000 F0r00                   52 	ldh	a, (__current_bank)
      000002 EAr00r00                53 	ld	(#__save),a
      000005 F8 06                   54 	ldhl	sp, #6
      000007 7E                      55 	ld	a, (hl)
      000008 E0r00                   56 	ldh	(__current_bank),a
      00000A EA 00 20                57 	ld	(#0x2000), a
      00000D C1                      58 	pop	bc
      00000E CDr00r00                59 	call	_set_bkg_data
      000011 FAr00r00                60 	ld	a, (#__save)
      000014 E0r00                   61 	ldh	(__current_bank),a
      000016 EA 00 20                62 	ld	(#0x2000), a
      000019 60                      63 	ld	h, b
      00001A 69                      64 	ld	l, c
      00001B E9                      65 	jp	(hl)
                                     66 ;/tmp/_gbsbuild/src/core/BankData.c:31: }
                                     67 ;/tmp/_gbsbuild/src/core/BankData.c:33: void SetBankedSpriteData(UBYTE i, UBYTE l, unsigned char* ptr, UBYTE bank) __naked {
                                     68 ;	---------------------------------
                                     69 ; Function SetBankedSpriteData
                                     70 ; ---------------------------------
      00001C                         71 _SetBankedSpriteData::
                                     72 ;/tmp/_gbsbuild/src/core/BankData.c:53: __endasm;  
      00001C F0r00                   73 	ldh	a, (__current_bank)
      00001E EAr00r00                74 	ld	(#__save),a
      000021 F8 06                   75 	ldhl	sp, #6
      000023 7E                      76 	ld	a, (hl)
      000024 E0r00                   77 	ldh	(__current_bank),a
      000026 EA 00 20                78 	ld	(#0x2000), a
      000029 C1                      79 	pop	bc
      00002A CDr00r00                80 	call	_set_sprite_data
      00002D FAr00r00                81 	ld	a, (#__save)
      000030 E0r00                   82 	ldh	(__current_bank),a
      000032 EA 00 20                83 	ld	(#0x2000), a
      000035 60                      84 	ld	h, b
      000036 69                      85 	ld	l, c
      000037 E9                      86 	jp	(hl)
                                     87 ;/tmp/_gbsbuild/src/core/BankData.c:54: }
                                     88 ;/tmp/_gbsbuild/src/core/BankData.c:56: UBYTE ReadBankedUBYTE(UBYTE bank, unsigned char* ptr) __naked {
                                     89 ;	---------------------------------
                                     90 ; Function ReadBankedUBYTE
                                     91 ; ---------------------------------
      000038                         92 _ReadBankedUBYTE::
                                     93 ;/tmp/_gbsbuild/src/core/BankData.c:76: __endasm;  
      000038 F0r00                   94 	ldh	a, (__current_bank)
      00003A EAr00r00                95 	ld	(#__save),a
      00003D F8 02                   96 	ldhl	sp, #2
      00003F 2A                      97 	ld	a, (hl+)
      000040 E0r00                   98 	ldh	(__current_bank),a
      000042 EA 00 20                99 	ld	(#0x2000), a
      000045 2A                     100 	ld	a, (hl+)
      000046 66                     101 	ld	h, (hl)
      000047 6F                     102 	ld	l, a
      000048 5E                     103 	ld	e, (hl)
      000049 FAr00r00               104 	ld	a, (#__save)
      00004C E0r00                  105 	ldh	(__current_bank),a
      00004E EA 00 20               106 	ld	(#0x2000), a
      000051 C9                     107 	ret
                                    108 ;/tmp/_gbsbuild/src/core/BankData.c:77: }
                                    109 ;/tmp/_gbsbuild/src/core/BankData.c:79: void ReadBankedBankPtr(UBYTE bank, BankPtr* to, BankPtr* from) __naked {
                                    110 ;	---------------------------------
                                    111 ; Function ReadBankedBankPtr
                                    112 ; ---------------------------------
      000052                        113 _ReadBankedBankPtr::
                                    114 ;/tmp/_gbsbuild/src/core/BankData.c:111: __endasm;  
      000052 F0r00                  115 	ldh	a, (__current_bank)
      000054 EAr00r00               116 	ld	(#__save),a
      000057 F8 02                  117 	ldhl	sp, #2
      000059 2A                     118 	ld	a, (hl+)
      00005A E0r00                  119 	ldh	(__current_bank),a
      00005C EA 00 20               120 	ld	(#0x2000), a
      00005F 2A                     121 	ld	a, (hl+)
      000060 5F                     122 	ld	e, a
      000061 2A                     123 	ld	a, (hl+)
      000062 57                     124 	ld	d, a
      000063 2A                     125 	ld	a, (hl+)
      000064 66                     126 	ld	h, (hl)
      000065 6F                     127 	ld	l, a
      000066 2A                     128 	ld	a, (hl+)
      000067 12                     129 	ld	(de), a
                                    130 	.rept	2
                                    131 	inc	de
                                    132 	ld	a, (hl+)
                                    133 	ld	(de), a
                                    134 	.endm
      000068 13                       1 	inc	de
      000069 2A                       2 	ld	a, (hl+)
      00006A 12                       3 	ld	(de), a
      00006B 13                       1 	inc	de
      00006C 2A                       2 	ld	a, (hl+)
      00006D 12                       3 	ld	(de), a
      00006E FAr00r00               135 	ld	a, (#__save)
      000071 E0r00                  136 	ldh	(__current_bank),a
      000073 EA 00 20               137 	ld	(#0x2000), a
      000076 C9                     138 	ret
                                    139 ;/tmp/_gbsbuild/src/core/BankData.c:112: }
                                    140 ;/tmp/_gbsbuild/src/core/BankData.c:114: void MemcpyBanked(UBYTE bank, void* to, void* from, size_t n) {
                                    141 ;	---------------------------------
                                    142 ; Function MemcpyBanked
                                    143 ; ---------------------------------
      000077                        144 _MemcpyBanked::
                                    145 ;/tmp/_gbsbuild/src/core/BankData.c:115: _save = _current_bank;
      000077 F0r00                  146 	ldh	a, (__current_bank+0)
      000079 EAr00r00               147 	ld	(#__save),a
                                    148 ;/tmp/_gbsbuild/src/core/BankData.c:116: SWITCH_ROM(bank);
      00007C F8 02                  149 	ldhl	sp,	#2
      00007E 7E                     150 	ld	a, (hl)
      00007F E0r00                  151 	ldh	(__current_bank+0),a
      000081 11 00 20               152 	ld	de, #0x2000
      000084 7E                     153 	ld	a, (hl)
      000085 12                     154 	ld	(de), a
                                    155 ;/tmp/_gbsbuild/src/core/BankData.c:117: memcpy(to, from, n);
      000086 F8 07                  156 	ldhl	sp,	#7
      000088 2A                     157 	ld	a, (hl+)
      000089 66                     158 	ld	h, (hl)
      00008A 6F                     159 	ld	l, a
      00008B E5                     160 	push	hl
      00008C F8 07                  161 	ldhl	sp,	#7
      00008E 2A                     162 	ld	a, (hl+)
      00008F 66                     163 	ld	h, (hl)
      000090 6F                     164 	ld	l, a
      000091 E5                     165 	push	hl
      000092 F8 07                  166 	ldhl	sp,	#7
      000094 2A                     167 	ld	a, (hl+)
      000095 66                     168 	ld	h, (hl)
      000096 6F                     169 	ld	l, a
      000097 E5                     170 	push	hl
      000098 CDr00r00               171 	call	_memcpy
      00009B E8 06                  172 	add	sp, #6
                                    173 ;/tmp/_gbsbuild/src/core/BankData.c:118: SWITCH_ROM(_save);
      00009D 21r00r00               174 	ld	hl, #__save
      0000A0 7E                     175 	ld	a, (hl)
      0000A1 E0r00                  176 	ldh	(__current_bank+0),a
      0000A3 11 00 20               177 	ld	de, #0x2000
      0000A6 7E                     178 	ld	a, (hl)
      0000A7 12                     179 	ld	(de), a
                                    180 ;/tmp/_gbsbuild/src/core/BankData.c:119: }
      0000A8 C9                     181 	ret
                                    182 	.area _CODE
                                    183 	.area _CABS (ABS)
